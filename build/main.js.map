{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["import * as utils from '@iobroker/adapter-core';\nimport axios, { type AxiosRequestConfig } from 'axios';\nimport schedule from 'node-schedule';\n\nclass Hydrop extends utils.Adapter {\n\tprivate apiBaseUrl: string = 'https://api.hydrop-systems.com';\n\tprivate interval: ioBroker.Interval | undefined;\n\n\tpublic constructor(options: Partial<utils.AdapterOptions> = {}) {\n\t\tsuper({\n\t\t\t...options,\n\t\t\tname: 'hydrop',\n\t\t});\n\t\tthis.on('ready', this.onReady.bind(this));\n\t\tthis.on('unload', this.onUnload.bind(this));\n\t}\n\n\tprivate async onReady(): Promise<void> {\n\t\tawait this.createdHistoryStates(this.config.historyDays);\n\t\tawait this.delHistoryStates(this.config.historyDays);\n\n\t\tawait this.validateURL();\n\t\tthis.log.info('Hydrop adapter started');\n\n\t\tschedule.scheduleJob('dayHistory', '0 0 0 * * *', async () => await this.setDayHistory(this.config.historyDays));\n\t}\n\n\t/**\n\t * Is called when adapter shuts down - callback has to be called under any circumstances!\n\t *\n\t * @param callback\n\t */\n\tprivate onUnload(callback: () => void): void {\n\t\ttry {\n\t\t\tschedule.cancelJob('dayHistory');\n\n\t\t\tcallback();\n\t\t} catch (e) {\n\t\t\tcallback();\n\t\t}\n\t}\n\n\tprivate async setDayHistory(days: number): Promise<void> {\n\t\tconst historyDays = days - 1;\n\n\t\tfor (let c = historyDays; c >= 0; c--) {\n\t\t\ttry {\n\t\t\t\tlet state;\n\n\t\t\t\tif (c == 0) {\n\t\t\t\t\tstate = await this.getStateAsync('data.dailyConsumption');\n\t\t\t\t} else {\n\t\t\t\t\tstate = await this.getStateAsync(`history.consumption_${c}_days_ago`);\n\t\t\t\t}\n\n\t\t\t\tif (state && state.val !== undefined) {\n\t\t\t\t\tconst _c = c + 1;\n\t\t\t\t\tawait this.setState(`history.consumption_${_c}_days_ago`, state.val, true);\n\t\t\t\t\tthis.log.debug(`history consumption ${_c} days ago: ${state.val} m\u00B3`);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tthis.log.warn(err);\n\t\t\t}\n\t\t}\n\t\tawait this.setState('data.dailyConsumption', 0, true);\n\t}\n\n\tprivate async delHistoryStates(days: number): Promise<void> {\n\t\tconst _historyStates = await this.getForeignObjectsAsync(`${this.namespace}.history.*`);\n\n\t\tfor (const i in _historyStates) {\n\t\t\tconst historyID = _historyStates[i]._id;\n\t\t\tconst historyName: string = historyID.split('.').pop() ?? '';\n\t\t\tconst parts = historyName.split('_');\n\t\t\tconst parsed = parseInt(parts[1], 10);\n\t\t\tconst historyNumber: number | undefined = !isNaN(parsed) ? parsed : undefined;\n\n\t\t\tif (historyNumber !== undefined && historyNumber > days) {\n\t\t\t\ttry {\n\t\t\t\t\tawait this.delObjectAsync(historyID);\n\t\t\t\t\tthis.log.debug(`Delete old History State \"${historyName}\"`);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthis.log.warn(`Cannot Delete old History State \"${historyName}\"`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async createdHistoryStates(historyDays: number): Promise<void> {\n\t\tfor (let c = 0; c < historyDays; c++) {\n\t\t\tconst _historyDays = c + 1;\n\n\t\t\tawait this.setObjectNotExistsAsync(`history.consumption_${_historyDays}_days_ago`, {\n\t\t\t\ttype: 'state',\n\t\t\t\tcommon: {\n\t\t\t\t\trole: 'value.fill',\n\t\t\t\t\tname: `Daily consumption ${_historyDays} days ago`,\n\t\t\t\t\ttype: 'number',\n\t\t\t\t\tread: true,\n\t\t\t\t\twrite: false,\n\t\t\t\t\tunit: 'm\u00B3',\n\t\t\t\t\tdef: 0,\n\t\t\t\t},\n\t\t\t\tnative: {}\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate async validateURL(): Promise<void> {\n\t\ttry {\n\t\t\tconst response = await axios.get(this.apiBaseUrl, {\n\t\t\t\ttimeout: 10000,\n\t\t\t\tvalidateStatus: () => true\n\t\t\t});\n\t\t\tif (response && response.status) {\n\t\t\t\tthis.log.debug(`Hydrop API is available ... Status: ${response.status}`);\n\t\t\t\tawait this.setState('info.connection', true, true);\n\t\t\t} else {\n\t\t\t\tthis.log.warn('Hydrop API did not return a valid response');\n\t\t\t\tawait this.setState('info.connection', false, true);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tthis.log.warn(`Hydrop API is not available: ${err}`);\n\t\t\tawait this.setState('info.connection', false, true);\n\t\t}\n\t}\n}\n\nif (require.main !== module) {\n\t// Export the constructor in compact mode\n\tmodule.exports = (options: Partial<utils.AdapterOptions> | undefined) => new Hydrop(options);\n} else {\n\t// otherwise start the instance directly\n\t(() => new Hydrop())();\n}\n"],
  "mappings": "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",
  "names": ["schedule", "axios"]
}
